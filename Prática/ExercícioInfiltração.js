// üí° Voc√™ pode limpar completamente qualquer stub antes de come√ßar. Muitas vezes
// recomendamos usar o stub, pois eles j√° est√£o configurados corretamente para
//trabalhe com os testes, que voc√™ pode encontrar em ./annalyns-infiltration.spec.js.
//
// üí° Voc√™ n√£o precisa escrever blocos de coment√°rios JSDoc sozinho; n√£o √© esperado
// em JavaScript idiom√°tico, mas algumas empresas e guias de estilo os aplicam.
//
// Agora ajude Annalyn a libertar sua melhor amiga!

/**
 * O ataque r√°pido est√° dispon√≠vel quando o cavaleiro est√° dormindo
 *
 * @param {boolean} knightIsAwake
 *
 * @return {boolean} Se voc√™ pode ou n√£o executar um ataque r√°pido.
 */
export function canExecuteFastAttack(knightIsAwake) {
  if (!knightIsAwake) {
    return true;
  } else {
    return false;
  }
}

/**
 * Um espi√£o √∫til captura informa√ß√µes, o que n√£o ser√° poss√≠vel fazer se todos estiverem dormindo.
 *
 * @param {boolean} knightIsAwake
 * @param {boolean} arqueiroIsAwake
 * @param {boolean} prisioneiroIsAwake
 *
 * @returns {boolean} Se voc√™ pode ou n√£o espionar algu√©m.
 */
export function canSpy(knightIsAwake, archerIsAwake, prisonerIsAwake) {
  if(!knightIsAwake && !archerIsAwake && !prisonerIsAwake) {
    return false;
  } else {
    return true;
  }
}

/**
 * Voc√™ ser√° pego pelo arqueiro se sinalizar enquanto ele estiver acordado.
 *
 * @param {boolean} arqueiroIsAwake
 * @param {boolean} prisioneiroIsAwake
 *
 * @returns {boolean} Se voc√™ pode ou n√£o enviar um sinal ao prisioneiro.
 */
export function canSignalPrisoner(archerIsAwake, prisonerIsAwake) {
  if(!archerIsAwake && !prisonerIsAwake) {
    return false;
  } else {
    return !archerIsAwake;
  }
}

/**
 * A etapa final do plano: libertar a melhor amiga de Annalyn.
 *
 * @param {boolean} knightIsAwake
 * @param {boolean} arqueiroIsAwake
 * @param {boolean} prisioneiroIsAwake
 * @param {boolean} petDogIsPresent
 *
 * @returns {boolean} Se voc√™ pode ou n√£o libertar o amigo de Annalyn.
 */
export function canFreePrisoner(
  knightIsAwake,
  archerIsAwake,
  prisonerIsAwake,
  petDogIsPresent,
) {
 return (petDogIsPresent && !archerIsAwake) || (!petDogIsPresent && prisonerIsAwake && !knightIsAwake && !archerIsAwake);
}

/*
(petDogIsPresent && !archerIsAwake): Esta parte verifica se o cachorro de estima√ß√£o est√° presente (petDogIsPresent) 
e se o arqueiro n√£o est√° acordado (!archerIsAwake). Se ambas as condi√ß√µes forem verdadeiras, isso significa que 
o cachorro de estima√ß√£o pode ser usado como distra√ß√£o para o arqueiro, permitindo a liberta√ß√£o do prisioneiro.

(!petDogIsPresent && prisonerIsAwake && !knightIsAwake && !archerIsAwake): Esta parte verifica se o cachorro de estima√ß√£o n√£o est√° presente 
(!petDogIsPresent), o prisioneiro est√° acordado (prisonerIsAwake), e tanto o cavaleiro quanto o arqueiro n√£o est√£o acordados
 (!knightIsAwake && !archerIsAwake). Se todas essas condi√ß√µes forem verdadeiras, isso significa que o prisioneiro pode ser 
libertado sem a presen√ßa do cachorro de estima√ß√£o, aproveitando o fato de que tanto o cavaleiro quanto o arqueiro est√£o dormindo.

Portanto, a fun√ß√£o canFreePrisoner retorna verdadeiro se uma dessas condi√ß√µes for atendida, indicando que Annalyn pode libertar seu amigo, 
e falso caso contr√°rio.

Parte na qual tive grande dificuldade de resolver 15/03/2024.
*/